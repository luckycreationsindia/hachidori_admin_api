generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(320)
  password  String   @db.Text
  role      Role     @default(USER)
  status    Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  sessions  Session[]
  schedules Schedules[]
  workflows Workflow[]

  @@index([email])
  @@index([status])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String   @unique
  userAgent    String
  ip           String
  createdAt    DateTime @default(now())
  expiresAt    DateTime

  @@index([userId])
  @@index([refreshToken])
  @@index([userId, refreshToken])
  @@index([expiresAt])
}

model Workflow {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  data        String   @db.Text
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([title])

  schedules Schedules[]
}

model Schedules {
  id          Int         @id @default(autoincrement())
  parentId    Int?
  parent      Schedules?  @relation("ScheduleParent", fields: [parentId], references: [id], onDelete: Cascade)
  workflowId  Int
  workflow    Workflow    @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  children    Schedules[] @relation("ScheduleParent")
  title       String?
  description String?
  userId      Int
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  startDate   DateTime    @db.Timestamptz(6)
  endDate     DateTime    @db.Timestamptz(6)
  createdAt   DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime    @updatedAt @db.Timestamptz(6)

  @@index([workflowId])
  @@index([userId])
  @@index([title])
  @@index([startDate])
  @@index([endDate])
  @@index([startDate, endDate])

  scheduleStatus ScheduleStatus[]
}

model ScheduleStatus {
  id         Int       @id @default(autoincrement())
  scheduleId Int
  schedule   Schedules @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  status     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([scheduleId])
  @@index([status])
  @@index([scheduleId, status])
}
